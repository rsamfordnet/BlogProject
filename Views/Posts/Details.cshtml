@using BlogProject.Services
@using Microsoft.AspNetCore.Identity
@using Newtonsoft.Json
@using BlogProject.Enums
@using BlogProject.ViewModels
@using BlogProject.Models
@using BlogProject.Data

@model PostDetailViewModel

@inject IImageService imageService
@inject UserManager<BlogUser> userManager


@{
    ViewData["Title"] = "Details";
}


<!-- Post Content -->


<section>
    <div class="container" data-aos="fade-up">

        <div class="row">

            <div class="col-md-9">
                <div class="section-header">
                    <h1 class="mb-1">@Html.Raw(Model.Post.Title)</h1>
                    <div class="post-meta"><span class="date"></span> <span class="mx-1">&bullet;</span> <span>@Model.Post.Created.ToString("MMM dd, yyyy")</span></div>
                    <img class="img-fluid" src="@imageService.DecodeImage(Model.Post.ImageData, Model.Post.ContentType)">
                </div>
                <!-- ======= Single Post Content ======= -->
                @Html.Raw(Model.Post.Content)
                <div class="d-flex align-items-center author mb-2">
                    <div class="photo">
                        <img src="@imageService.DecodeImage(Model.Post.BlogUser.ImageData, Model.Post.BlogUser.ContentType)"
                             alt="@Model.Post.BlogUser.FullName"
                             class="rounded-pill img-thumbnail img-fluid" style="width:60px;">
                        

                    </div>
                    <div class="">
                        <h5 class="m-0 p-0">@Model.Post.BlogUser.FullName</h5>
                    </div>
                </div>

            </div><!-- End Single Post Content -->
            <div class="col-md-3 mt-3 border-start border-dark">
                <div class="aside-block">
                    <h3 class="aside-title">Tags</h3>
                    <ul class="aside-tags list-unstyled">
                        <li>
                            @foreach (var tag in Model.Tags)
                            {
                                <a asp-action="TagIndex" asp-route-tag="@tag">#@tag</a>
                            }
                        </li>

                    </ul>
                </div><!-- End Tags -->

            </div>
            <div>
                <!--COMMENTS SECTION-->
                <h5 id="commentSection" class="comment-title py-4">@Model.Post.Comments.Count Comments</h5>
                @if (User.Identity.IsAuthenticated)
                {
                    <form asp-action="Create" asp-controller="Comments" method="post">
                        @Html.Hidden("PostId", Model.Post.Id)
                        @Html.Hidden("Slug", Model.Post.Slug)

                        <div class="form-group mt-3">
                            <label class="h2 control-label font-weight-bold">Add Comment</label>
                            <textarea name="body" class="form-control" rows="10"></textarea>
                        </div>

                        <button type="submit" class="btn btn-primary mt-3"> Submit</button>


                    </form>

                }
                else
                {
                    <a class="btn btn-dark mt-5" asp-area="Identity" asp-page="/Account/Login">
                        Login to Add Comments
                    </a>
                }
            </div>

        </div>
    </div>
</section>
<!-- End #main -->

@foreach (var comment in Model.Post.Comments.OrderByDescending(c => c.Created))
{
    <div class="">
        <img src="@imageService.DecodeImage(comment.BlogUser.ImageData, comment.BlogUser.ContentType)"
             alt="@comment.BlogUser.FullName"
             class="mr-3 mt-3 rounded-pill img-thumbnail "
             style="width:60px;">

        <div class="media-body">
            <h4>@comment.BlogUser.FullName</h4>

            @****************************************************************
        SECTION 1: POST ON OR UPDATED ON
        *****************************************************************@
            @if (comment.Deleted is not null)
            {
                <span class="small font-italic">
                    <span class="font-weight-bolder">Deleted</span> : @comment.Deleted?.ToString("MMM dd, yyyy")
                </span>
            }
            else if (comment.Moderated is not null)
            {
                <span class="small font-italic">
                    <span class="font-italic">
                        Moderated <span class="text-danger font-italic">(@comment.ModerationType.ToString().ToLower())</span>
                    </span>
                    : @comment.Moderated?.ToString("MMM dd, yyyy")
                </span>
            }
            else if (comment.Updated is not null)
            {

                <span class="small font-italic">
                    <span class="font-italic">Updated </span> : <span class="type-italic">@comment.Updated?.ToString("MMM dd, yyyy")</span>
                </span>

            }
            else
            {
                <span class="small ">
                    <span class="type-italic">Created </span> : @comment.Created.ToString("MMM dd, yyyy")
                </span>
            }

            @*****************************************************************
        SECTION 2: HOW DO WE COMPOSE THE BODY
        *****************************************************************@
            @*****************************************************************
        SECTION 2A: Render pre text
        *****************************************************************@
            <br />
            @if (comment.Deleted is not null)
            {
                <span class="type-italic">The comment posted on @comment.Created.ToString("MMM dd, yyyy") by @comment.BlogUser.FullName was deleted by the Moderator...</span>
            }
            else if (comment.Moderated is not null)
            {
                <span class="type-italic">The comment posted on @comment.Created.ToString("MMM dd, yyyy") by @comment.BlogUser.FullName has been Moderated...</span>
            }

            <hr />

            @*****************************************************************
        SECTION 2B: Render main body
        *****************************************************************@
            @if (string.IsNullOrEmpty(comment.Body))
            {
                <span class="small font-italic">Comment not available...</span>
            }
            else if (comment.Moderated is not null)
            {
                @comment.ModeratedBody
            }
            else if (comment.Deleted is null)
            {
                @comment.Body
            }


            @****************************************************************
            SECTION 3: CAN WE RENDER THE EDIT BUTTON
        *****************************************************************@
            @if (comment.Moderated is null && comment.Deleted is null && comment.BlogUserId == userManager.GetUserId(User))
            {
                <hr>
                <button data-bs-toggle="modal" data-bs-target="#editModal" class="btn btn-dark">EDIT</button>
            }

            @****************************************************************
        SECTION 4: CAN WE RENDER THE MODERATE AND DELETE BUTTONS
        *****************************************************************@
            @if (User.IsInRole(BlogRole.Moderator.ToString()) && comment.Deleted is null)
            {
                <hr>
                <div class="row">
                    <div class="col-2">
                        <button class="btn btn-outline-dark" data-bs-toggle="modal" data-bs-target="#moderate">MODERATE</button>
                    </div>
                    <div class="col-2">

                        <form asp-action="Delete" asp-controller="Comments">
                            @Html.Hidden("Id", comment.Id)
                            @Html.Hidden("Slug", comment.Post.Slug)
                            <button class="btn-sm btn-dark font-weight-bold btn-block">DELETE</button>
                        </form>
                    </div>

                </div>
        
            }

        </div>

    </div>
    @*Modals*@
    <div class="modal" id="editModal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Editing Comment...</h4>

                </div>

                <!-- Modal body -->
                <div class="modal-body">
                    <form asp-action="Edit" asp-controller="Comments">
                        @Html.Hidden("Id", comment.Id)

                        <div class="form-group">
                            <textarea name="Body" class="form-control" required>@comment.Body</textarea>
                        </div>

                        <button class="btn-dark mt-2" type="submit">Submit</button>
                    </form>
                </div>

                <!-- Modal footer -->
                <div class="modal-footer">
                    <button type="button" class="btn-dark mt-2" data-bs-dismiss="modal">Close</button>
                </div>

            </div>
        </div>
    </div>

    <div class="modal" id="moderate">
        <div class="modal-dialog">
            <div class="modal-content">

                <!-- Modal Header -->
                <div class="modal-header">
                    <h4 class="modal-title">Moderating Comment...</h4>

                </div>

                <!-- Modal body -->
                <div class="modal-body">
                    <form asp-action="Moderate" asp-controller="Comments">
                        @Html.Hidden("Id", comment.Id)
                        @Html.Hidden("Body", comment.Body)

                        <div class="form-group">
                            <label class="control-label">Original Comment</label>
                            <textarea disabled class="form-control" style="resize:none">@comment.Body</textarea>
                        </div>

                        <div class="form-group">
                            <label class="control-label">Moderated Comment</label>
                            <textarea required name="ModeratedBody" class="form-control">@comment.ModeratedBody</textarea>
                        </div>

                        <div class="form-group">
                            <label class="control-label">Reason For Moderation</label>
                            <select class="form-control" asp-for="@comment.ModerationType" name="ModerationType" asp-items="Html.GetEnumSelectList<ModerationType>()"></select>
                        </div>

                        <div class="form-group">
                            <div class="row">
                                <div class="col">
                                    <button class="btn-sm btn-block btn-dark border-success font-weight-bold" type="submit">SUBMIT</button>
                                </div>
                                <div class="col">
                                    <button class="btn-sm btn-block btn-dark font-weight-bold" type="button" data-dismiss="modal">CLOSE</button>
                                </div>
                            </div>
                        </div>

                    </form>
                </div>
            </div>
        </div>

    </div>

}

@section Scripts{

    <script>
        $('#editModal').appendTo("body")
    </script>

}

